// source: bookStack.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.bookStack.Bookdata', null, global);
goog.exportSymbol('proto.bookStack.Categories', null, global);
goog.exportSymbol('proto.bookStack.CategoryMapEntry', null, global);
goog.exportSymbol('proto.bookStack.CategoryMapEntry.CategoryList', null, global);
goog.exportSymbol('proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem', null, global);
goog.exportSymbol('proto.bookStack.MyData', null, global);
goog.exportSymbol('proto.bookStack.MyData.CategorydataCase', null, global);
goog.exportSymbol('proto.bookStack.MyData.PagedataCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookStack.Bookdata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bookStack.Bookdata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bookStack.Bookdata.displayName = 'proto.bookStack.Bookdata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookStack.CategoryMapEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bookStack.CategoryMapEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bookStack.CategoryMapEntry.displayName = 'proto.bookStack.CategoryMapEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookStack.CategoryMapEntry.CategoryList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bookStack.CategoryMapEntry.CategoryList.repeatedFields_, null);
};
goog.inherits(proto.bookStack.CategoryMapEntry.CategoryList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bookStack.CategoryMapEntry.CategoryList.displayName = 'proto.bookStack.CategoryMapEntry.CategoryList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.repeatedFields_, null);
};
goog.inherits(proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.displayName = 'proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookStack.Categories = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bookStack.Categories.repeatedFields_, null);
};
goog.inherits(proto.bookStack.Categories, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bookStack.Categories.displayName = 'proto.bookStack.Categories';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookStack.MyData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bookStack.MyData.repeatedFields_, proto.bookStack.MyData.oneofGroups_);
};
goog.inherits(proto.bookStack.MyData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bookStack.MyData.displayName = 'proto.bookStack.MyData';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookStack.Bookdata.prototype.toObject = function(opt_includeInstance) {
  return proto.bookStack.Bookdata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookStack.Bookdata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.Bookdata.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    author: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bookname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bookdescri: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bookimgurl: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookStack.Bookdata}
 */
proto.bookStack.Bookdata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookStack.Bookdata;
  return proto.bookStack.Bookdata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookStack.Bookdata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookStack.Bookdata}
 */
proto.bookStack.Bookdata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookdescri(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookimgurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookStack.Bookdata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookStack.Bookdata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookStack.Bookdata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.Bookdata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBookname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBookdescri();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBookimgurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.bookStack.Bookdata.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bookStack.Bookdata} returns this
 */
proto.bookStack.Bookdata.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string author = 2;
 * @return {string}
 */
proto.bookStack.Bookdata.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bookStack.Bookdata} returns this
 */
proto.bookStack.Bookdata.prototype.setAuthor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bookname = 3;
 * @return {string}
 */
proto.bookStack.Bookdata.prototype.getBookname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bookStack.Bookdata} returns this
 */
proto.bookStack.Bookdata.prototype.setBookname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bookdescri = 4;
 * @return {string}
 */
proto.bookStack.Bookdata.prototype.getBookdescri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bookStack.Bookdata} returns this
 */
proto.bookStack.Bookdata.prototype.setBookdescri = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bookimgurl = 5;
 * @return {string}
 */
proto.bookStack.Bookdata.prototype.getBookimgurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bookStack.Bookdata} returns this
 */
proto.bookStack.Bookdata.prototype.setBookimgurl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookStack.CategoryMapEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.bookStack.CategoryMapEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookStack.CategoryMapEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.CategoryMapEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    categoryItems: (f = msg.getCategoryItems()) && proto.bookStack.CategoryMapEntry.CategoryList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookStack.CategoryMapEntry}
 */
proto.bookStack.CategoryMapEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookStack.CategoryMapEntry;
  return proto.bookStack.CategoryMapEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookStack.CategoryMapEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookStack.CategoryMapEntry}
 */
proto.bookStack.CategoryMapEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.bookStack.CategoryMapEntry.CategoryList;
      reader.readMessage(value,proto.bookStack.CategoryMapEntry.CategoryList.deserializeBinaryFromReader);
      msg.setCategoryItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookStack.CategoryMapEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookStack.CategoryMapEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookStack.CategoryMapEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.CategoryMapEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCategoryItems();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bookStack.CategoryMapEntry.CategoryList.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bookStack.CategoryMapEntry.CategoryList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookStack.CategoryMapEntry.CategoryList.prototype.toObject = function(opt_includeInstance) {
  return proto.bookStack.CategoryMapEntry.CategoryList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookStack.CategoryMapEntry.CategoryList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.CategoryMapEntry.CategoryList.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryListList: jspb.Message.toObjectList(msg.getCategoryListList(),
    proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList}
 */
proto.bookStack.CategoryMapEntry.CategoryList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookStack.CategoryMapEntry.CategoryList;
  return proto.bookStack.CategoryMapEntry.CategoryList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookStack.CategoryMapEntry.CategoryList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList}
 */
proto.bookStack.CategoryMapEntry.CategoryList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem;
      reader.readMessage(value,proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.deserializeBinaryFromReader);
      msg.addCategoryList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookStack.CategoryMapEntry.CategoryList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookStack.CategoryMapEntry.CategoryList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookStack.CategoryMapEntry.CategoryList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.CategoryMapEntry.CategoryList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.prototype.toObject = function(opt_includeInstance) {
  return proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    catekey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem}
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem;
  return proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem}
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCatekey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCatekey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string catekey = 1;
 * @return {string}
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.prototype.getCatekey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem} returns this
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.prototype.setCatekey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string values = 2;
 * @return {!Array<string>}
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem} returns this
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem} returns this
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem} returns this
 */
proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * repeated CategoryListItem category_list = 1;
 * @return {!Array<!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem>}
 */
proto.bookStack.CategoryMapEntry.CategoryList.prototype.getCategoryListList = function() {
  return /** @type{!Array<!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem, 1));
};


/**
 * @param {!Array<!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem>} value
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList} returns this
*/
proto.bookStack.CategoryMapEntry.CategoryList.prototype.setCategoryListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem}
 */
proto.bookStack.CategoryMapEntry.CategoryList.prototype.addCategoryList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bookStack.CategoryMapEntry.CategoryList.CategoryListItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bookStack.CategoryMapEntry.CategoryList} returns this
 */
proto.bookStack.CategoryMapEntry.CategoryList.prototype.clearCategoryListList = function() {
  return this.setCategoryListList([]);
};


/**
 * optional uint32 key = 1;
 * @return {number}
 */
proto.bookStack.CategoryMapEntry.prototype.getKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bookStack.CategoryMapEntry} returns this
 */
proto.bookStack.CategoryMapEntry.prototype.setKey = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional CategoryList category_items = 2;
 * @return {?proto.bookStack.CategoryMapEntry.CategoryList}
 */
proto.bookStack.CategoryMapEntry.prototype.getCategoryItems = function() {
  return /** @type{?proto.bookStack.CategoryMapEntry.CategoryList} */ (
    jspb.Message.getWrapperField(this, proto.bookStack.CategoryMapEntry.CategoryList, 2));
};


/**
 * @param {?proto.bookStack.CategoryMapEntry.CategoryList|undefined} value
 * @return {!proto.bookStack.CategoryMapEntry} returns this
*/
proto.bookStack.CategoryMapEntry.prototype.setCategoryItems = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bookStack.CategoryMapEntry} returns this
 */
proto.bookStack.CategoryMapEntry.prototype.clearCategoryItems = function() {
  return this.setCategoryItems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bookStack.CategoryMapEntry.prototype.hasCategoryItems = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bookStack.Categories.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookStack.Categories.prototype.toObject = function(opt_includeInstance) {
  return proto.bookStack.Categories.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookStack.Categories} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.Categories.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryMapList: jspb.Message.toObjectList(msg.getCategoryMapList(),
    proto.bookStack.CategoryMapEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookStack.Categories}
 */
proto.bookStack.Categories.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookStack.Categories;
  return proto.bookStack.Categories.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookStack.Categories} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookStack.Categories}
 */
proto.bookStack.Categories.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bookStack.CategoryMapEntry;
      reader.readMessage(value,proto.bookStack.CategoryMapEntry.deserializeBinaryFromReader);
      msg.addCategoryMap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookStack.Categories.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookStack.Categories.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookStack.Categories} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.Categories.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryMapList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bookStack.CategoryMapEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CategoryMapEntry category_map = 1;
 * @return {!Array<!proto.bookStack.CategoryMapEntry>}
 */
proto.bookStack.Categories.prototype.getCategoryMapList = function() {
  return /** @type{!Array<!proto.bookStack.CategoryMapEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bookStack.CategoryMapEntry, 1));
};


/**
 * @param {!Array<!proto.bookStack.CategoryMapEntry>} value
 * @return {!proto.bookStack.Categories} returns this
*/
proto.bookStack.Categories.prototype.setCategoryMapList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bookStack.CategoryMapEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bookStack.CategoryMapEntry}
 */
proto.bookStack.Categories.prototype.addCategoryMap = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bookStack.CategoryMapEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bookStack.Categories} returns this
 */
proto.bookStack.Categories.prototype.clearCategoryMapList = function() {
  return this.setCategoryMapList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bookStack.MyData.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bookStack.MyData.oneofGroups_ = [[2],[3]];

/**
 * @enum {number}
 */
proto.bookStack.MyData.CategorydataCase = {
  CATEGORYDATA_NOT_SET: 0,
  CATEGORY: 2
};

/**
 * @return {proto.bookStack.MyData.CategorydataCase}
 */
proto.bookStack.MyData.prototype.getCategorydataCase = function() {
  return /** @type {proto.bookStack.MyData.CategorydataCase} */(jspb.Message.computeOneofCase(this, proto.bookStack.MyData.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.bookStack.MyData.PagedataCase = {
  PAGEDATA_NOT_SET: 0,
  MPAGE: 3
};

/**
 * @return {proto.bookStack.MyData.PagedataCase}
 */
proto.bookStack.MyData.prototype.getPagedataCase = function() {
  return /** @type {proto.bookStack.MyData.PagedataCase} */(jspb.Message.computeOneofCase(this, proto.bookStack.MyData.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookStack.MyData.prototype.toObject = function(opt_includeInstance) {
  return proto.bookStack.MyData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookStack.MyData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.MyData.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookdataList: jspb.Message.toObjectList(msg.getBookdataList(),
    proto.bookStack.Bookdata.toObject, includeInstance),
    category: (f = msg.getCategory()) && proto.bookStack.Categories.toObject(includeInstance, f),
    mpage: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookStack.MyData}
 */
proto.bookStack.MyData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookStack.MyData;
  return proto.bookStack.MyData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookStack.MyData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookStack.MyData}
 */
proto.bookStack.MyData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bookStack.Bookdata;
      reader.readMessage(value,proto.bookStack.Bookdata.deserializeBinaryFromReader);
      msg.addBookdata(value);
      break;
    case 2:
      var value = new proto.bookStack.Categories;
      reader.readMessage(value,proto.bookStack.Categories.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMpage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookStack.MyData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookStack.MyData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookStack.MyData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bookStack.MyData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bookStack.Bookdata.serializeBinaryToWriter
    );
  }
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bookStack.Categories.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated Bookdata bookdata = 1;
 * @return {!Array<!proto.bookStack.Bookdata>}
 */
proto.bookStack.MyData.prototype.getBookdataList = function() {
  return /** @type{!Array<!proto.bookStack.Bookdata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bookStack.Bookdata, 1));
};


/**
 * @param {!Array<!proto.bookStack.Bookdata>} value
 * @return {!proto.bookStack.MyData} returns this
*/
proto.bookStack.MyData.prototype.setBookdataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bookStack.Bookdata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bookStack.Bookdata}
 */
proto.bookStack.MyData.prototype.addBookdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bookStack.Bookdata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bookStack.MyData} returns this
 */
proto.bookStack.MyData.prototype.clearBookdataList = function() {
  return this.setBookdataList([]);
};


/**
 * optional Categories category = 2;
 * @return {?proto.bookStack.Categories}
 */
proto.bookStack.MyData.prototype.getCategory = function() {
  return /** @type{?proto.bookStack.Categories} */ (
    jspb.Message.getWrapperField(this, proto.bookStack.Categories, 2));
};


/**
 * @param {?proto.bookStack.Categories|undefined} value
 * @return {!proto.bookStack.MyData} returns this
*/
proto.bookStack.MyData.prototype.setCategory = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bookStack.MyData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bookStack.MyData} returns this
 */
proto.bookStack.MyData.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bookStack.MyData.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 mpage = 3;
 * @return {number}
 */
proto.bookStack.MyData.prototype.getMpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bookStack.MyData} returns this
 */
proto.bookStack.MyData.prototype.setMpage = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.bookStack.MyData.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bookStack.MyData} returns this
 */
proto.bookStack.MyData.prototype.clearMpage = function() {
  return jspb.Message.setOneofField(this, 3, proto.bookStack.MyData.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bookStack.MyData.prototype.hasMpage = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.bookStack);
